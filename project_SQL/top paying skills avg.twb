<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='top_paying_skills' inline='true' name='federated.0rwip8d01h6z391eeul4f05vn1kz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='top_paying_skills' name='textscan.1obiwwh00esrlt1e25o7g1656zgu'>
            <connection class='textscan' directory='/Users/pasipakkala/Documents/SQL learning project - Barousse/project_SQL' filename='top_paying_skills.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1obiwwh00esrlt1e25o7g1656zgu' name='top_paying_skills.csv' table='[top_paying_skills#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en' separator=','>
            <column datatype='integer' name='job_id' ordinal='0' />
            <column datatype='string' name='job_title' ordinal='1' />
            <column datatype='real' name='salary_year_avg' ordinal='2' />
            <column datatype='string' name='company_name' ordinal='3' />
            <column datatype='string' name='skills' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[top_paying_skills.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[job_id]</local-name>
            <parent-name>[top_paying_skills.csv]</parent-name>
            <remote-alias>job_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[top_paying_skills.csv_B3AC5BDF6B8D48DE929EB54D7032F4DC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[job_title]</local-name>
            <parent-name>[top_paying_skills.csv]</parent-name>
            <remote-alias>job_title</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[top_paying_skills.csv_B3AC5BDF6B8D48DE929EB54D7032F4DC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salary_year_avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[salary_year_avg]</local-name>
            <parent-name>[top_paying_skills.csv]</parent-name>
            <remote-alias>salary_year_avg</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[top_paying_skills.csv_B3AC5BDF6B8D48DE929EB54D7032F4DC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[company_name]</local-name>
            <parent-name>[top_paying_skills.csv]</parent-name>
            <remote-alias>company_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[top_paying_skills.csv_B3AC5BDF6B8D48DE929EB54D7032F4DC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>skills</remote-name>
            <remote-type>129</remote-type>
            <local-name>[skills]</local-name>
            <parent-name>[top_paying_skills.csv]</parent-name>
            <remote-alias>skills</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[top_paying_skills.csv_B3AC5BDF6B8D48DE929EB54D7032F4DC]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='top_paying_skills.csv' datatype='table' name='[__tableau_internal_object_id__].[top_paying_skills.csv_B3AC5BDF6B8D48DE929EB54D7032F4DC]' role='measure' type='quantitative' />
      <column caption='Company Name' datatype='string' name='[company_name]' role='dimension' type='nominal' />
      <column caption='Job Id' datatype='integer' name='[job_id]' role='dimension' type='ordinal' />
      <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
      <column caption='Salary Year Avg' datatype='real' name='[salary_year_avg]' role='measure' type='quantitative' />
      <column caption='Skills' datatype='string' name='[skills]' role='dimension' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/6y/7cbs1_853yvd___c8w9zmxnh0000gn/T/tableau-temp/#TableauTemp_0f7x4uk1c9xjtd1dbisxq0jc3tnr.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/29/2025 01:34:27 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>job_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[job_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>job_id</remote-alias>
              <ordinal>0</ordinal>
              <family>top_paying_skills.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>557</approx-count>
              <contains-null>true</contains-null>
              <object-id>[top_paying_skills.csv_B3AC5BDF6B8D48DE929EB54D7032F4DC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>job_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[job_title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>job_title</remote-alias>
              <ordinal>1</ordinal>
              <family>top_paying_skills.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>313</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[top_paying_skills.csv_B3AC5BDF6B8D48DE929EB54D7032F4DC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>salary_year_avg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[salary_year_avg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>salary_year_avg</remote-alias>
              <ordinal>2</ordinal>
              <family>top_paying_skills.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>211</approx-count>
              <contains-null>true</contains-null>
              <object-id>[top_paying_skills.csv_B3AC5BDF6B8D48DE929EB54D7032F4DC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>company_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[company_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>company_name</remote-alias>
              <ordinal>3</ordinal>
              <family>top_paying_skills.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>286</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[top_paying_skills.csv_B3AC5BDF6B8D48DE929EB54D7032F4DC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>skills</remote-name>
              <remote-type>129</remote-type>
              <local-name>[skills]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>skills</remote-alias>
              <ordinal>4</ordinal>
              <family>top_paying_skills.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[top_paying_skills.csv_B3AC5BDF6B8D48DE929EB54D7032F4DC]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='top_paying_skills.csv' id='top_paying_skills.csv_B3AC5BDF6B8D48DE929EB54D7032F4DC'>
            <properties context=''>
              <relation connection='textscan.1obiwwh00esrlt1e25o7g1656zgu' name='top_paying_skills.csv' table='[top_paying_skills#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en' separator=','>
                  <column datatype='integer' name='job_id' ordinal='0' />
                  <column datatype='string' name='job_title' ordinal='1' />
                  <column datatype='real' name='salary_year_avg' ordinal='2' />
                  <column datatype='string' name='company_name' ordinal='3' />
                  <column datatype='string' name='skills' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Selected list of top, bottom, and interesting skills with average salaries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='top_paying_skills' name='federated.0rwip8d01h6z391eeul4f05vn1kz' />
          </datasources>
          <datasource-dependencies datasource='federated.0rwip8d01h6z391eeul4f05vn1kz'>
            <column-instance column='[salary_year_avg]' derivation='Avg' name='[avg:salary_year_avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[skills]' derivation='None' name='[none:skills:nk]' pivot='key' type='nominal' />
            <column caption='Salary Year Avg' datatype='real' name='[salary_year_avg]' role='measure' type='quantitative' />
            <column caption='Skills' datatype='string' name='[skills]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rwip8d01h6z391eeul4f05vn1kz].[none:skills:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:skills:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;airflow&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;alteryx&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;arch&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;atlassian&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;aws&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;azure&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;bash&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;bigquery&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;c&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;c\#&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;c++&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;chef&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;cognos&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;colocation&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;confluence&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;crystal&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;databricks&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;dax&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;db2&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;elasticsearch&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;erlang&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;express&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;flow&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;gcp&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;ggplot2&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;git&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;github&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;go&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;golang&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;hadoop&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;html&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;ibm cloud&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;java&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;jenkins&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;jira&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;julia&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;kubernetes&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;linux&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;looker&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;mariadb&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;matlab&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;matplotlib&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;microstrategy&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;mongodb&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;ms access&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;node.js&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;notion&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;numpy&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;oracle&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;outlook&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;pascal&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;phoenix&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;php&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;planner&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;plotly&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;postgresql&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;powershell&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;redshift&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;sap&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;sas&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;sass&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;scala&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;scikit-learn&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;seaborn&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;sharepoint&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;sheets&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;shell&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;smartsheet&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;snowflake&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;spark&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;spreadsheet&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;spring&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;spss&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;sql server&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;ssis&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;ssrs&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;t-sql&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;terminal&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;twilio&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;unity&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;unix&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;vb.net&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;visio&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;visual basic&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;webex&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;windows&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;word&quot;' />
                <groupfilter function='member' level='[none:skills:nk]' member='&quot;zoom&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rwip8d01h6z391eeul4f05vn1kz].[none:skills:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rwip8d01h6z391eeul4f05vn1kz].[avg:salary_year_avg:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rwip8d01h6z391eeul4f05vn1kz].[none:skills:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0rwip8d01h6z391eeul4f05vn1kz].[avg:salary_year_avg:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0rwip8d01h6z391eeul4f05vn1kz].[none:skills:nk]' value='23' />
            <format attr='text-format' field='[federated.0rwip8d01h6z391eeul4f05vn1kz].[avg:salary_year_avg:qk]' value='c#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rwip8d01h6z391eeul4f05vn1kz].[avg:salary_year_avg:qk]' />
              <text column='[federated.0rwip8d01h6z391eeul4f05vn1kz].[avg:salary_year_avg:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rwip8d01h6z391eeul4f05vn1kz].[none:skills:nk]</rows>
        <cols>[federated.0rwip8d01h6z391eeul4f05vn1kz].[avg:salary_year_avg:qk]</cols>
      </table>
      <simple-id uuid='{F44108F3-0825-44C9-9DF2-F4592ECC0451}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rwip8d01h6z391eeul4f05vn1kz].[avg:salary_year_avg:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0rwip8d01h6z391eeul4f05vn1kz].[avg:salary_year_avg:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0rwip8d01h6z391eeul4f05vn1kz].[none:company_name:nk]</field>
            <field>[federated.0rwip8d01h6z391eeul4f05vn1kz].[none:job_id:ok]</field>
            <field>[federated.0rwip8d01h6z391eeul4f05vn1kz].[none:job_title:nk]</field>
            <field>[federated.0rwip8d01h6z391eeul4f05vn1kz].[none:skills:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C97CCF72-92CD-48F0-B376-BC37178069EC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
